diff --git a/plugins/input/postgis/postgis_datasource.cpp b/plugins/input/postgis/postgis_datasource.cpp
index 88a03a6..c9a1b37 100644
--- a/plugins/input/postgis/postgis_datasource.cpp
+++ b/plugins/input/postgis/postgis_datasource.cpp
@@ -40,6 +40,16 @@ MAPNIK_DISABLE_WARNING_PUSH
 #include <boost/algorithm/string.hpp>
 MAPNIK_DISABLE_WARNING_POP
 
+// boost
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wunused-parameter"
+#pragma GCC diagnostic ignored "-Wunused-local-typedef"
+#pragma GCC diagnostic ignored "-Wshadow"
+#pragma GCC diagnostic ignored "-Wsign-conversion"
+#pragma GCC diagnostic ignored "-Wconversion"
+#include <boost/algorithm/string/replace.hpp>
+#pragma GCC diagnostic pop
+
 // stl
 #include <cfloat> // FLT_MAX
 #include <memory>
@@ -61,6 +71,31 @@ using mapnik::sql_utils::identifier;
 using mapnik::sql_utils::literal;
 using std::shared_ptr;
 
+namespace {
+inline std::string table_from_sql_old(std::string const& sql)
+{
+    std::string table_name = sql;
+    boost::algorithm::replace_all(table_name,"\n"," ");
+    boost::algorithm::ireplace_all(table_name," from "," FROM ");
+
+    std::string::size_type idx = table_name.rfind(" FROM ");
+    if (idx!=std::string::npos)
+    {
+        idx = table_name.find_first_not_of(" ",idx+5);
+        if (idx != std::string::npos)
+        {
+            table_name=table_name.substr(idx);
+        }
+        idx = table_name.find_first_of(", )");
+        if (idx != std::string::npos)
+        {
+            table_name = table_name.substr(0,idx);
+        }
+    }
+    return table_name;
+}
+} // namespace
+
 postgis_datasource::postgis_datasource(parameters const& params)
     : datasource(params)
     , table_(*params.get<std::string>("table", ""))
@@ -157,6 +192,8 @@ postgis_datasource::postgis_datasource(parameters const& params)
             mapnik::sql_utils::table_from_sql(geometry_table_.empty() ? table_ : geometry_table_,
                                               parsed_schema_,
                                               parsed_table_);
+            if (parsed_table_.empty())
+                parsed_table_ = table_from_sql_old(geometry_table_.empty() ? table_ : geometry_table_);
 
             // NOTE: parsed_table_ now should ideally be a table name, but
             // there are known edge cases where this will break down and
